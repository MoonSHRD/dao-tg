// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SafeDelegateResponse safe delegate response
//
// swagger:model SafeDelegateResponse
type SafeDelegateResponse struct {

	// Delegate
	// Required: true
	Delegate *string `json:"delegate"`

	// Delegator
	// Required: true
	Delegator *string `json:"delegator"`

	// Label
	// Required: true
	// Max Length: 50
	// Min Length: 1
	Label *string `json:"label"`

	// Safe
	// Required: true
	Safe *string `json:"safe"`
}

// Validate validates this safe delegate response
func (m *SafeDelegateResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDelegate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDelegator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLabel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSafe(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SafeDelegateResponse) validateDelegate(formats strfmt.Registry) error {

	if err := validate.Required("delegate", "body", m.Delegate); err != nil {
		return err
	}

	return nil
}

func (m *SafeDelegateResponse) validateDelegator(formats strfmt.Registry) error {

	if err := validate.Required("delegator", "body", m.Delegator); err != nil {
		return err
	}

	return nil
}

func (m *SafeDelegateResponse) validateLabel(formats strfmt.Registry) error {

	if err := validate.Required("label", "body", m.Label); err != nil {
		return err
	}

	if err := validate.MinLength("label", "body", *m.Label, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("label", "body", *m.Label, 50); err != nil {
		return err
	}

	return nil
}

func (m *SafeDelegateResponse) validateSafe(formats strfmt.Registry) error {

	if err := validate.Required("safe", "body", m.Safe); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this safe delegate response based on context it is used
func (m *SafeDelegateResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SafeDelegateResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SafeDelegateResponse) UnmarshalBinary(b []byte) error {
	var res SafeDelegateResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
