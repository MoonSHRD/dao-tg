// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MasterCopyResponse master copy response
//
// swagger:model MasterCopyResponse
type MasterCopyResponse struct {

	// Address
	// Required: true
	Address *string `json:"address"`

	// Deployed block number
	// Required: true
	DeployedBlockNumber *int64 `json:"deployedBlockNumber"`

	// Deployer
	// Required: true
	// Min Length: 1
	Deployer *string `json:"deployer"`

	// L2
	// Required: true
	L2 *bool `json:"l2"`

	// Last indexed block number
	// Required: true
	LastIndexedBlockNumber *int64 `json:"lastIndexedBlockNumber"`

	// Version
	// Required: true
	// Min Length: 1
	Version *string `json:"version"`
}

// Validate validates this master copy response
func (m *MasterCopyResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeployedBlockNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeployer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateL2(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastIndexedBlockNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MasterCopyResponse) validateAddress(formats strfmt.Registry) error {

	if err := validate.Required("address", "body", m.Address); err != nil {
		return err
	}

	return nil
}

func (m *MasterCopyResponse) validateDeployedBlockNumber(formats strfmt.Registry) error {

	if err := validate.Required("deployedBlockNumber", "body", m.DeployedBlockNumber); err != nil {
		return err
	}

	return nil
}

func (m *MasterCopyResponse) validateDeployer(formats strfmt.Registry) error {

	if err := validate.Required("deployer", "body", m.Deployer); err != nil {
		return err
	}

	if err := validate.MinLength("deployer", "body", *m.Deployer, 1); err != nil {
		return err
	}

	return nil
}

func (m *MasterCopyResponse) validateL2(formats strfmt.Registry) error {

	if err := validate.Required("l2", "body", m.L2); err != nil {
		return err
	}

	return nil
}

func (m *MasterCopyResponse) validateLastIndexedBlockNumber(formats strfmt.Registry) error {

	if err := validate.Required("lastIndexedBlockNumber", "body", m.LastIndexedBlockNumber); err != nil {
		return err
	}

	return nil
}

func (m *MasterCopyResponse) validateVersion(formats strfmt.Registry) error {

	if err := validate.Required("version", "body", m.Version); err != nil {
		return err
	}

	if err := validate.MinLength("version", "body", *m.Version, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this master copy response based on context it is used
func (m *MasterCopyResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MasterCopyResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MasterCopyResponse) UnmarshalBinary(b []byte) error {
	var res MasterCopyResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
