// Code generated by go-swagger; DO NOT EDIT.

package safes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MoonSHRD/dao-tg/pkg/gnosis/models"
)

// SafesReadReader is a Reader for the SafesRead structure.
type SafesReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SafesReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSafesReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSafesReadNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSafesReadUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSafesReadOK creates a SafesReadOK with default headers values
func NewSafesReadOK() *SafesReadOK {
	return &SafesReadOK{}
}

/* SafesReadOK describes a response with status code 200, with default header values.

SafesReadOK safes read o k
*/
type SafesReadOK struct {
	Payload *models.SafeInfoResponse
}

func (o *SafesReadOK) Error() string {
	return fmt.Sprintf("[GET /safes/{address}/][%d] safesReadOK  %+v", 200, o.Payload)
}
func (o *SafesReadOK) GetPayload() *models.SafeInfoResponse {
	return o.Payload
}

func (o *SafesReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SafeInfoResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSafesReadNotFound creates a SafesReadNotFound with default headers values
func NewSafesReadNotFound() *SafesReadNotFound {
	return &SafesReadNotFound{}
}

/* SafesReadNotFound describes a response with status code 404, with default header values.

Safe not found
*/
type SafesReadNotFound struct {
}

func (o *SafesReadNotFound) Error() string {
	return fmt.Sprintf("[GET /safes/{address}/][%d] safesReadNotFound ", 404)
}

func (o *SafesReadNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSafesReadUnprocessableEntity creates a SafesReadUnprocessableEntity with default headers values
func NewSafesReadUnprocessableEntity() *SafesReadUnprocessableEntity {
	return &SafesReadUnprocessableEntity{}
}

/* SafesReadUnprocessableEntity describes a response with status code 422, with default header values.

 code = 1: Checksum address validation failed
code = 50: Cannot get Safe info
*/
type SafesReadUnprocessableEntity struct {
}

func (o *SafesReadUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /safes/{address}/][%d] safesReadUnprocessableEntity ", 422)
}

func (o *SafesReadUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
