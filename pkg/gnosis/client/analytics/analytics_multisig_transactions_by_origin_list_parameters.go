// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAnalyticsMultisigTransactionsByOriginListParams creates a new AnalyticsMultisigTransactionsByOriginListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAnalyticsMultisigTransactionsByOriginListParams() *AnalyticsMultisigTransactionsByOriginListParams {
	return &AnalyticsMultisigTransactionsByOriginListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAnalyticsMultisigTransactionsByOriginListParamsWithTimeout creates a new AnalyticsMultisigTransactionsByOriginListParams object
// with the ability to set a timeout on a request.
func NewAnalyticsMultisigTransactionsByOriginListParamsWithTimeout(timeout time.Duration) *AnalyticsMultisigTransactionsByOriginListParams {
	return &AnalyticsMultisigTransactionsByOriginListParams{
		timeout: timeout,
	}
}

// NewAnalyticsMultisigTransactionsByOriginListParamsWithContext creates a new AnalyticsMultisigTransactionsByOriginListParams object
// with the ability to set a context for a request.
func NewAnalyticsMultisigTransactionsByOriginListParamsWithContext(ctx context.Context) *AnalyticsMultisigTransactionsByOriginListParams {
	return &AnalyticsMultisigTransactionsByOriginListParams{
		Context: ctx,
	}
}

// NewAnalyticsMultisigTransactionsByOriginListParamsWithHTTPClient creates a new AnalyticsMultisigTransactionsByOriginListParams object
// with the ability to set a custom HTTPClient for a request.
func NewAnalyticsMultisigTransactionsByOriginListParamsWithHTTPClient(client *http.Client) *AnalyticsMultisigTransactionsByOriginListParams {
	return &AnalyticsMultisigTransactionsByOriginListParams{
		HTTPClient: client,
	}
}

/* AnalyticsMultisigTransactionsByOriginListParams contains all the parameters to send to the API endpoint
   for the analytics multisig transactions by origin list operation.

   Typically these are written to a http.Request.
*/
type AnalyticsMultisigTransactionsByOriginListParams struct {

	// BaseGas.
	BaseGas *float64

	// BaseGasGt.
	BaseGasGt *float64

	// BaseGasGte.
	BaseGasGte *float64

	// BaseGasLt.
	BaseGasLt *float64

	// BaseGasLte.
	BaseGasLte *float64

	// Failed.
	Failed *string

	// GasPrice.
	GasPrice *float64

	// GasPriceGt.
	GasPriceGt *float64

	// GasPriceGte.
	GasPriceGte *float64

	// GasPriceLt.
	GasPriceLt *float64

	// GasPriceLte.
	GasPriceLte *float64

	// GasToken.
	GasToken *string

	// Operation.
	Operation *string

	// RefundReceiver.
	RefundReceiver *string

	// Safe.
	Safe *string

	// SafeTxGas.
	SafeTxGas *float64

	// SafeTxGasGt.
	SafeTxGasGt *float64

	// SafeTxGasGte.
	SafeTxGasGte *float64

	// SafeTxGasLt.
	SafeTxGasLt *float64

	// SafeTxGasLte.
	SafeTxGasLte *float64

	// To.
	To *string

	// Trusted.
	Trusted *string

	// Value.
	Value *float64

	// ValueGt.
	ValueGt *float64

	// ValueGte.
	ValueGte *float64

	// ValueLt.
	ValueLt *float64

	// ValueLte.
	ValueLte *float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the analytics multisig transactions by origin list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithDefaults() *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the analytics multisig transactions by origin list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithTimeout(timeout time.Duration) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithContext(ctx context.Context) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithHTTPClient(client *http.Client) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseGas adds the baseGas to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithBaseGas(baseGas *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetBaseGas(baseGas)
	return o
}

// SetBaseGas adds the baseGas to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetBaseGas(baseGas *float64) {
	o.BaseGas = baseGas
}

// WithBaseGasGt adds the baseGasGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithBaseGasGt(baseGasGt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetBaseGasGt(baseGasGt)
	return o
}

// SetBaseGasGt adds the baseGasGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetBaseGasGt(baseGasGt *float64) {
	o.BaseGasGt = baseGasGt
}

// WithBaseGasGte adds the baseGasGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithBaseGasGte(baseGasGte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetBaseGasGte(baseGasGte)
	return o
}

// SetBaseGasGte adds the baseGasGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetBaseGasGte(baseGasGte *float64) {
	o.BaseGasGte = baseGasGte
}

// WithBaseGasLt adds the baseGasLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithBaseGasLt(baseGasLt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetBaseGasLt(baseGasLt)
	return o
}

// SetBaseGasLt adds the baseGasLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetBaseGasLt(baseGasLt *float64) {
	o.BaseGasLt = baseGasLt
}

// WithBaseGasLte adds the baseGasLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithBaseGasLte(baseGasLte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetBaseGasLte(baseGasLte)
	return o
}

// SetBaseGasLte adds the baseGasLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetBaseGasLte(baseGasLte *float64) {
	o.BaseGasLte = baseGasLte
}

// WithFailed adds the failed to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithFailed(failed *string) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetFailed(failed)
	return o
}

// SetFailed adds the failed to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetFailed(failed *string) {
	o.Failed = failed
}

// WithGasPrice adds the gasPrice to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithGasPrice(gasPrice *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetGasPrice(gasPrice)
	return o
}

// SetGasPrice adds the gasPrice to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetGasPrice(gasPrice *float64) {
	o.GasPrice = gasPrice
}

// WithGasPriceGt adds the gasPriceGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithGasPriceGt(gasPriceGt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetGasPriceGt(gasPriceGt)
	return o
}

// SetGasPriceGt adds the gasPriceGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetGasPriceGt(gasPriceGt *float64) {
	o.GasPriceGt = gasPriceGt
}

// WithGasPriceGte adds the gasPriceGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithGasPriceGte(gasPriceGte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetGasPriceGte(gasPriceGte)
	return o
}

// SetGasPriceGte adds the gasPriceGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetGasPriceGte(gasPriceGte *float64) {
	o.GasPriceGte = gasPriceGte
}

// WithGasPriceLt adds the gasPriceLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithGasPriceLt(gasPriceLt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetGasPriceLt(gasPriceLt)
	return o
}

// SetGasPriceLt adds the gasPriceLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetGasPriceLt(gasPriceLt *float64) {
	o.GasPriceLt = gasPriceLt
}

// WithGasPriceLte adds the gasPriceLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithGasPriceLte(gasPriceLte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetGasPriceLte(gasPriceLte)
	return o
}

// SetGasPriceLte adds the gasPriceLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetGasPriceLte(gasPriceLte *float64) {
	o.GasPriceLte = gasPriceLte
}

// WithGasToken adds the gasToken to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithGasToken(gasToken *string) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetGasToken(gasToken)
	return o
}

// SetGasToken adds the gasToken to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetGasToken(gasToken *string) {
	o.GasToken = gasToken
}

// WithOperation adds the operation to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithOperation(operation *string) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetOperation(operation)
	return o
}

// SetOperation adds the operation to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetOperation(operation *string) {
	o.Operation = operation
}

// WithRefundReceiver adds the refundReceiver to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithRefundReceiver(refundReceiver *string) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetRefundReceiver(refundReceiver)
	return o
}

// SetRefundReceiver adds the refundReceiver to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetRefundReceiver(refundReceiver *string) {
	o.RefundReceiver = refundReceiver
}

// WithSafe adds the safe to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithSafe(safe *string) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetSafe(safe)
	return o
}

// SetSafe adds the safe to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetSafe(safe *string) {
	o.Safe = safe
}

// WithSafeTxGas adds the safeTxGas to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithSafeTxGas(safeTxGas *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetSafeTxGas(safeTxGas)
	return o
}

// SetSafeTxGas adds the safeTxGas to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetSafeTxGas(safeTxGas *float64) {
	o.SafeTxGas = safeTxGas
}

// WithSafeTxGasGt adds the safeTxGasGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithSafeTxGasGt(safeTxGasGt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetSafeTxGasGt(safeTxGasGt)
	return o
}

// SetSafeTxGasGt adds the safeTxGasGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetSafeTxGasGt(safeTxGasGt *float64) {
	o.SafeTxGasGt = safeTxGasGt
}

// WithSafeTxGasGte adds the safeTxGasGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithSafeTxGasGte(safeTxGasGte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetSafeTxGasGte(safeTxGasGte)
	return o
}

// SetSafeTxGasGte adds the safeTxGasGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetSafeTxGasGte(safeTxGasGte *float64) {
	o.SafeTxGasGte = safeTxGasGte
}

// WithSafeTxGasLt adds the safeTxGasLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithSafeTxGasLt(safeTxGasLt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetSafeTxGasLt(safeTxGasLt)
	return o
}

// SetSafeTxGasLt adds the safeTxGasLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetSafeTxGasLt(safeTxGasLt *float64) {
	o.SafeTxGasLt = safeTxGasLt
}

// WithSafeTxGasLte adds the safeTxGasLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithSafeTxGasLte(safeTxGasLte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetSafeTxGasLte(safeTxGasLte)
	return o
}

// SetSafeTxGasLte adds the safeTxGasLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetSafeTxGasLte(safeTxGasLte *float64) {
	o.SafeTxGasLte = safeTxGasLte
}

// WithTo adds the to to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithTo(to *string) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetTo(to *string) {
	o.To = to
}

// WithTrusted adds the trusted to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithTrusted(trusted *string) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetTrusted(trusted)
	return o
}

// SetTrusted adds the trusted to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetTrusted(trusted *string) {
	o.Trusted = trusted
}

// WithValue adds the value to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithValue(value *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetValue(value)
	return o
}

// SetValue adds the value to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetValue(value *float64) {
	o.Value = value
}

// WithValueGt adds the valueGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithValueGt(valueGt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetValueGt(valueGt)
	return o
}

// SetValueGt adds the valueGt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetValueGt(valueGt *float64) {
	o.ValueGt = valueGt
}

// WithValueGte adds the valueGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithValueGte(valueGte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetValueGte(valueGte)
	return o
}

// SetValueGte adds the valueGte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetValueGte(valueGte *float64) {
	o.ValueGte = valueGte
}

// WithValueLt adds the valueLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithValueLt(valueLt *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetValueLt(valueLt)
	return o
}

// SetValueLt adds the valueLt to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetValueLt(valueLt *float64) {
	o.ValueLt = valueLt
}

// WithValueLte adds the valueLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) WithValueLte(valueLte *float64) *AnalyticsMultisigTransactionsByOriginListParams {
	o.SetValueLte(valueLte)
	return o
}

// SetValueLte adds the valueLte to the analytics multisig transactions by origin list params
func (o *AnalyticsMultisigTransactionsByOriginListParams) SetValueLte(valueLte *float64) {
	o.ValueLte = valueLte
}

// WriteToRequest writes these params to a swagger request
func (o *AnalyticsMultisigTransactionsByOriginListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BaseGas != nil {

		// query param base_gas
		var qrBaseGas float64

		if o.BaseGas != nil {
			qrBaseGas = *o.BaseGas
		}
		qBaseGas := swag.FormatFloat64(qrBaseGas)
		if qBaseGas != "" {

			if err := r.SetQueryParam("base_gas", qBaseGas); err != nil {
				return err
			}
		}
	}

	if o.BaseGasGt != nil {

		// query param base_gas__gt
		var qrBaseGasGt float64

		if o.BaseGasGt != nil {
			qrBaseGasGt = *o.BaseGasGt
		}
		qBaseGasGt := swag.FormatFloat64(qrBaseGasGt)
		if qBaseGasGt != "" {

			if err := r.SetQueryParam("base_gas__gt", qBaseGasGt); err != nil {
				return err
			}
		}
	}

	if o.BaseGasGte != nil {

		// query param base_gas__gte
		var qrBaseGasGte float64

		if o.BaseGasGte != nil {
			qrBaseGasGte = *o.BaseGasGte
		}
		qBaseGasGte := swag.FormatFloat64(qrBaseGasGte)
		if qBaseGasGte != "" {

			if err := r.SetQueryParam("base_gas__gte", qBaseGasGte); err != nil {
				return err
			}
		}
	}

	if o.BaseGasLt != nil {

		// query param base_gas__lt
		var qrBaseGasLt float64

		if o.BaseGasLt != nil {
			qrBaseGasLt = *o.BaseGasLt
		}
		qBaseGasLt := swag.FormatFloat64(qrBaseGasLt)
		if qBaseGasLt != "" {

			if err := r.SetQueryParam("base_gas__lt", qBaseGasLt); err != nil {
				return err
			}
		}
	}

	if o.BaseGasLte != nil {

		// query param base_gas__lte
		var qrBaseGasLte float64

		if o.BaseGasLte != nil {
			qrBaseGasLte = *o.BaseGasLte
		}
		qBaseGasLte := swag.FormatFloat64(qrBaseGasLte)
		if qBaseGasLte != "" {

			if err := r.SetQueryParam("base_gas__lte", qBaseGasLte); err != nil {
				return err
			}
		}
	}

	if o.Failed != nil {

		// query param failed
		var qrFailed string

		if o.Failed != nil {
			qrFailed = *o.Failed
		}
		qFailed := qrFailed
		if qFailed != "" {

			if err := r.SetQueryParam("failed", qFailed); err != nil {
				return err
			}
		}
	}

	if o.GasPrice != nil {

		// query param gas_price
		var qrGasPrice float64

		if o.GasPrice != nil {
			qrGasPrice = *o.GasPrice
		}
		qGasPrice := swag.FormatFloat64(qrGasPrice)
		if qGasPrice != "" {

			if err := r.SetQueryParam("gas_price", qGasPrice); err != nil {
				return err
			}
		}
	}

	if o.GasPriceGt != nil {

		// query param gas_price__gt
		var qrGasPriceGt float64

		if o.GasPriceGt != nil {
			qrGasPriceGt = *o.GasPriceGt
		}
		qGasPriceGt := swag.FormatFloat64(qrGasPriceGt)
		if qGasPriceGt != "" {

			if err := r.SetQueryParam("gas_price__gt", qGasPriceGt); err != nil {
				return err
			}
		}
	}

	if o.GasPriceGte != nil {

		// query param gas_price__gte
		var qrGasPriceGte float64

		if o.GasPriceGte != nil {
			qrGasPriceGte = *o.GasPriceGte
		}
		qGasPriceGte := swag.FormatFloat64(qrGasPriceGte)
		if qGasPriceGte != "" {

			if err := r.SetQueryParam("gas_price__gte", qGasPriceGte); err != nil {
				return err
			}
		}
	}

	if o.GasPriceLt != nil {

		// query param gas_price__lt
		var qrGasPriceLt float64

		if o.GasPriceLt != nil {
			qrGasPriceLt = *o.GasPriceLt
		}
		qGasPriceLt := swag.FormatFloat64(qrGasPriceLt)
		if qGasPriceLt != "" {

			if err := r.SetQueryParam("gas_price__lt", qGasPriceLt); err != nil {
				return err
			}
		}
	}

	if o.GasPriceLte != nil {

		// query param gas_price__lte
		var qrGasPriceLte float64

		if o.GasPriceLte != nil {
			qrGasPriceLte = *o.GasPriceLte
		}
		qGasPriceLte := swag.FormatFloat64(qrGasPriceLte)
		if qGasPriceLte != "" {

			if err := r.SetQueryParam("gas_price__lte", qGasPriceLte); err != nil {
				return err
			}
		}
	}

	if o.GasToken != nil {

		// query param gas_token
		var qrGasToken string

		if o.GasToken != nil {
			qrGasToken = *o.GasToken
		}
		qGasToken := qrGasToken
		if qGasToken != "" {

			if err := r.SetQueryParam("gas_token", qGasToken); err != nil {
				return err
			}
		}
	}

	if o.Operation != nil {

		// query param operation
		var qrOperation string

		if o.Operation != nil {
			qrOperation = *o.Operation
		}
		qOperation := qrOperation
		if qOperation != "" {

			if err := r.SetQueryParam("operation", qOperation); err != nil {
				return err
			}
		}
	}

	if o.RefundReceiver != nil {

		// query param refund_receiver
		var qrRefundReceiver string

		if o.RefundReceiver != nil {
			qrRefundReceiver = *o.RefundReceiver
		}
		qRefundReceiver := qrRefundReceiver
		if qRefundReceiver != "" {

			if err := r.SetQueryParam("refund_receiver", qRefundReceiver); err != nil {
				return err
			}
		}
	}

	if o.Safe != nil {

		// query param safe
		var qrSafe string

		if o.Safe != nil {
			qrSafe = *o.Safe
		}
		qSafe := qrSafe
		if qSafe != "" {

			if err := r.SetQueryParam("safe", qSafe); err != nil {
				return err
			}
		}
	}

	if o.SafeTxGas != nil {

		// query param safe_tx_gas
		var qrSafeTxGas float64

		if o.SafeTxGas != nil {
			qrSafeTxGas = *o.SafeTxGas
		}
		qSafeTxGas := swag.FormatFloat64(qrSafeTxGas)
		if qSafeTxGas != "" {

			if err := r.SetQueryParam("safe_tx_gas", qSafeTxGas); err != nil {
				return err
			}
		}
	}

	if o.SafeTxGasGt != nil {

		// query param safe_tx_gas__gt
		var qrSafeTxGasGt float64

		if o.SafeTxGasGt != nil {
			qrSafeTxGasGt = *o.SafeTxGasGt
		}
		qSafeTxGasGt := swag.FormatFloat64(qrSafeTxGasGt)
		if qSafeTxGasGt != "" {

			if err := r.SetQueryParam("safe_tx_gas__gt", qSafeTxGasGt); err != nil {
				return err
			}
		}
	}

	if o.SafeTxGasGte != nil {

		// query param safe_tx_gas__gte
		var qrSafeTxGasGte float64

		if o.SafeTxGasGte != nil {
			qrSafeTxGasGte = *o.SafeTxGasGte
		}
		qSafeTxGasGte := swag.FormatFloat64(qrSafeTxGasGte)
		if qSafeTxGasGte != "" {

			if err := r.SetQueryParam("safe_tx_gas__gte", qSafeTxGasGte); err != nil {
				return err
			}
		}
	}

	if o.SafeTxGasLt != nil {

		// query param safe_tx_gas__lt
		var qrSafeTxGasLt float64

		if o.SafeTxGasLt != nil {
			qrSafeTxGasLt = *o.SafeTxGasLt
		}
		qSafeTxGasLt := swag.FormatFloat64(qrSafeTxGasLt)
		if qSafeTxGasLt != "" {

			if err := r.SetQueryParam("safe_tx_gas__lt", qSafeTxGasLt); err != nil {
				return err
			}
		}
	}

	if o.SafeTxGasLte != nil {

		// query param safe_tx_gas__lte
		var qrSafeTxGasLte float64

		if o.SafeTxGasLte != nil {
			qrSafeTxGasLte = *o.SafeTxGasLte
		}
		qSafeTxGasLte := swag.FormatFloat64(qrSafeTxGasLte)
		if qSafeTxGasLte != "" {

			if err := r.SetQueryParam("safe_tx_gas__lte", qSafeTxGasLte); err != nil {
				return err
			}
		}
	}

	if o.To != nil {

		// query param to
		var qrTo string

		if o.To != nil {
			qrTo = *o.To
		}
		qTo := qrTo
		if qTo != "" {

			if err := r.SetQueryParam("to", qTo); err != nil {
				return err
			}
		}
	}

	if o.Trusted != nil {

		// query param trusted
		var qrTrusted string

		if o.Trusted != nil {
			qrTrusted = *o.Trusted
		}
		qTrusted := qrTrusted
		if qTrusted != "" {

			if err := r.SetQueryParam("trusted", qTrusted); err != nil {
				return err
			}
		}
	}

	if o.Value != nil {

		// query param value
		var qrValue float64

		if o.Value != nil {
			qrValue = *o.Value
		}
		qValue := swag.FormatFloat64(qrValue)
		if qValue != "" {

			if err := r.SetQueryParam("value", qValue); err != nil {
				return err
			}
		}
	}

	if o.ValueGt != nil {

		// query param value__gt
		var qrValueGt float64

		if o.ValueGt != nil {
			qrValueGt = *o.ValueGt
		}
		qValueGt := swag.FormatFloat64(qrValueGt)
		if qValueGt != "" {

			if err := r.SetQueryParam("value__gt", qValueGt); err != nil {
				return err
			}
		}
	}

	if o.ValueGte != nil {

		// query param value__gte
		var qrValueGte float64

		if o.ValueGte != nil {
			qrValueGte = *o.ValueGte
		}
		qValueGte := swag.FormatFloat64(qrValueGte)
		if qValueGte != "" {

			if err := r.SetQueryParam("value__gte", qValueGte); err != nil {
				return err
			}
		}
	}

	if o.ValueLt != nil {

		// query param value__lt
		var qrValueLt float64

		if o.ValueLt != nil {
			qrValueLt = *o.ValueLt
		}
		qValueLt := swag.FormatFloat64(qrValueLt)
		if qValueLt != "" {

			if err := r.SetQueryParam("value__lt", qValueLt); err != nil {
				return err
			}
		}
	}

	if o.ValueLte != nil {

		// query param value__lte
		var qrValueLte float64

		if o.ValueLte != nil {
			qrValueLte = *o.ValueLte
		}
		qValueLte := swag.FormatFloat64(qrValueLte)
		if qValueLte != "" {

			if err := r.SetQueryParam("value__lte", qValueLte); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
